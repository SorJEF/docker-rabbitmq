#!/bin/bash

set -u
set -e

CLUSTER=${CLUSTER:-''}
FQDN=$(hostname -s).wot.io
export RABBITMQNODE_NAME=rabbit@$(hostname -s)

echo "Starting RabbitMQ on ${FQDN}"

echo "Configuring RabbitMQ for LDAP auth"
sed  -i 's/%LDAP_SERVER%/'${LDAP_SERVER:-"ldap.wot.io"}'/;
		s/%RABBITMQ_PASSWORD%/'${RABBITMQ_PASSWORD}'/' /etc/rabbitmq/rabbitmq.config

echo "Setting RabbitMQ Erlang cookie"
install -o rabbitmq -g rabbitmq -m 0400 /.erlang.cookie /var/lib/rabbitmq/.erlang.cookie

echo "Starting RabbitMQ"
/usr/lib/rabbitmq/bin/rabbitmq-server &

sleep 10

CONFIGURED_VHOSTS="$(rabbitmqctl list_vhosts | wc -l)"
if [ "$CONFIGURED_VHOSTS" -lt "5" ]; then # 3 actual vhosts (/, wot, management) plus two lines from rabbitmqctl output
	if [[ -z "$CLUSTER" ]]; then
		echo "Loading passwords"
		. /.passwords
		echo "Running as master"
		sleep 10
		echo "Configuring master"
		rabbitmqctl add_vhost management
		rabbitmqctl add_user prod $PRODPASSWORD
		rabbitmqctl add_user wot $WOTPASSWORD
		rabbitmqctl add_user admin $ADMINPASSWORD
		rabbitmqctl set_user_tags prod wot-observer
		rabbitmqctl set_user_tags wot management WOT wot-observer
		rabbitmqctl set_user_tags admin administrator WOT wot-administrator
		rabbitmqctl set_permissions admin '.*' '.*' '.*'
		rabbitmqctl set_permissions -p management admin '.*' '.*' '.*'
		rabbitmqctl set_permissions -p management wot '.*' '.*' '.*'

		env | grep "^VHOSTS.*" | awk -F "=" '{print $2}' | while read -r line ; do
			rabbitmqctl add_vhost $line
			rabbitmqctl set_permissions -p $line admin '.*' '.*' '.*'
			rabbitmqctl set_permissions -p $line prod '.*' '.*' '.*'
			rabbitmqctl set_permissions -p $line wot '.*' '.*' '.*'
		done

		echo "RabbitMQ master configured... running..."
	else
		echo "Joining cluster at $CLUSTER"
		rabbitmqctl stop_app
		rabbitmqctl reset
		rabbitmqctl join_cluster $CLUSTER
		rabbitmqctl start_app
	fi
else
	echo "RabbitMQ already configured. Running."
fi

# 'Removed' to facilitate restart when a crash occurs
# /bin/bash -l
