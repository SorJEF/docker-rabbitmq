#!/bin/bash

set -u
set -e

FQDN=$(hostname -s).wot.io
export RABBITMQNODE_NAME=rabbit@$(hostname -s)

echo "Starting RabbitMQ on ${FQDN}"

CONFIG=$(dig @${DNSSERVER} TXT ${FQDN} | grep "^${FQDN}\." | awk '{ print $5}')

echo "Discovering configuration [$CONFIG]"

CLUSTER=$(echo $CONFIG | gawk -F ";" 'match($0,/rabbitmq_cluster=([^;]+)/,m) {print m[1]}' | sed 's%\\;%%g' | sed 's%"%%g')

echo "Found cluster [$CLUSTER]"

echo "Configuring RabbitMQ for LDAP auth"
sed  -i 's/%LDAP_SERVER%/'${LDAP_SERVER:-"ldap.wot.io"}'/;
		s/%RABBITMQ_PASSWORD%/'${RABBITMQ_PASSWORD}'/' /etc/rabbitmq/rabbitmq.config

echo "Starting RabbitMQ"
/usr/lib/rabbitmq/bin/rabbitmq-server &

sleep 10

if [[ -z "$CLUSTER" ]]; then
	echo "Loading passwords"
	. /.passwords
	echo "Running as master"
	sleep 10
	echo "Configuring master"
	rabbitmqctl add_vhost wot
	rabbitmqctl add_vhost management
	rabbitmqctl add_user prod $PRODPASSWORD
	rabbitmqctl add_user wot $WOTPASSWORD
	rabbitmqctl add_user admin $ADMINPASSWORD
	rabbitmqctl set_user_tags prod wot-observer
	rabbitmqctl set_user_tags wot management WOT wot-observer
	rabbitmqctl set_user_tags admin administrator WOT wot-administrator
	rabbitmqctl set_permissions admin '.*' '.*' '.*'
	rabbitmqctl set_permissions -p wot admin '.*' '.*' '.*'
	rabbitmqctl set_permissions -p management admin '.*' '.*' '.*'
	rabbitmqctl set_permissions -p wot wot '.*' '.*' '.*'
	rabbitmqctl set_permissions -p management wot '.*' '.*' '.*'
	rabbitmqctl set_permissions -p wot prod '.*' '.*' '.*'
	echo "RabbitMQ master configured... running..."
else
	echo "Joining cluster at $CLUSTER"
	rabbitmqctl stop_app
	rabbitmqctl reset
	rabbitmqctl join_cluster $CLUSTER
	rabbitmqctl start_app
fi

# Infinite sleep loop to keep docker backgrounding happy
while true; do
	sleep 1
done
